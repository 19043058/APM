name: Secure CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Provisioning
    runs-on: ubuntu-latest
    env:
      TF_LOG: ERROR
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          PROXMOX_URL: ${{ secrets.PROXMOX_URL }}
          PROXMOX_TOKEN_ID: ${{ secrets.PROXMOX_TOKEN_ID }}
          PROXMOX_TOKEN_SECRET: ${{ secrets.PROXMOX_TOKEN_SECRET }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          terraform plan -out=tfplan.binary \
            -var="proxmox_url=${{ env.PROXMOX_URL }}" \
            -var="proxmox_token_id=${{ env.PROXMOX_TOKEN_ID }}" \
            -var="proxmox_token_secret=${{ env.PROXMOX_TOKEN_SECRET }}" \
            -var="ssh_public_key=${{ env.SSH_PUBLIC_KEY }}" \
            -var="template_name=ubuntu-24.04.1-live-server-amd64.iso" \
            -var="node_name=pve" \
            -var="network_bridge=vmbr0" \
            -var='vm={"vm_id":100,"vm_name":"nginx-server","vm_memory":2048,"vm_cores":2,"vm_disk_size":"20G"}'
        shell: bash

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan.binary
        shell: bash

      - name: Save Terraform Outputs
        id: tf_outputs
        working-directory: ./terraform
        run: terraform output -json > ../ansible/terraform_outputs.json